@page "/Catalog/Categories"
@attribute [Authorize(CatalogPermissions.Categories.Default)]
@using global::Shopularity.Catalog.Categories
@using global::Shopularity.Catalog.Localization
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using global::Shopularity.Catalog.Permissions
@using Volo.Abp.AspNetCore.Components
@inherits AbpComponentBase
@inject ICategoriesAppService CategoriesAppService
@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<CatalogResource> LH

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Categories"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

<style>
    tr.table-row-selectable:hover {
        cursor: default;
    }
</style>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>

        <Row>
            <div class="col col-12">
                <div class="mb-3">
                    <Form id="CategorySearchForm">
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit @bind-Text="@Filter.FilterText"
                                          Autofocus="true"
                                          Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <SubmitButton Form="CategorySearchForm" Clicked="GetCategoriesAsync">
                                    <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                                </SubmitButton>
                            </Addon>
                        </Addons>
                    </Form>
                </div>
            </div>
        </Row>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        <DataGrid TItem="CategoryDto"
                  @ref="DataGridRef"
                  Data="CategoryList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <RadarSpinner/>
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="CategoryDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="CategoryDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="CategoryDto"
                                          Visible="@CanEditCategory"
                                          Clicked="async () => await OpenEditCategoryModalAsync(context)"
                                          Text="@L["Edit"]">
                            </EntityAction>
                            <EntityAction TItem="CategoryDto"
                                          Visible="@CanDeleteCategory"
                                          Clicked="() => DeleteCategoryAsync(context)"
                                          ConfirmationMessage="@(() => L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]">
                            </EntityAction>

                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>

                <DataGridColumn TItem="CategoryDto"
                                Field="Name"
                                Caption="@L["Name"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateCategoryModal" Closing="@CreateCategoryModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="CreateCategoryForm">
            <ModalHeader>
                <ModalTitle>@L["NewCategory"]</ModalTitle>
                <CloseButton Clicked="CloseCreateCategoryModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewCategoryValidations"
                             Mode="ValidationMode.Auto"
                             Model="@NewCategory"
                             ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewCategory.Name" MaxLength="CategoryConsts.NameMaxLength">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateCategoryModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateCategoryForm" Clicked="CreateCategoryAsync"/>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditCategoryModal" Closing="@EditCategoryModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="EditCategoryForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditCategoryModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingCategoryValidations"
                             Mode="ValidationMode.Auto"
                             Model="@EditingCategory"
                             ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingCategory.Name" MaxLength="CategoryConsts.NameMaxLength">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditCategoryModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditCategoryForm" Clicked="UpdateCategoryAsync"/>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>